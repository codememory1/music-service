version: '3.7'

services:
  nginx:
    container_name: ${MICROSERVICE_NAME}-nginx
    image: nginx:stable-alpine
    restart: unless-stopped
    ports:
      - "8004:80"
    volumes:
      - ${MICROSERVICE_DOCKER_PATH}/${MICROSERVICE_ENV}/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ${MICROSERVICE_SOURCE_PATH}:${MICROSERVICE_WORKDIR}
    depends_on:
      - php
    networks:
      - microservice_network

  php:
    container_name: ${MICROSERVICE_NAME}-php
    build:
      context: ./
      dockerfile: ${MICROSERVICE_DOCKER_PATH}/${MICROSERVICE_ENV}/php-fpm/Dockerfile
      args:
        workdir: ${MICROSERVICE_WORKDIR}
    env_file:
      - .env
      - ${MICROSERVICE_SHARED_ENV_PATH}
    expose:
      - 9000
    volumes:
      - ${MICROSERVICE_SOURCE_PATH}:${MICROSERVICE_WORKDIR}
      - ${MICROSERVICE_DOCKER_PATH}/${MICROSERVICE_ENV}/php-fpm/php.ini:/usr/local/etc/php/conf.d/php.ini
      - ${PACKAGES_PATH}:${PACKAGES_WORKDIR}
    depends_on:
      - db
      - redis
    networks:
      - microservice_network

  db:
    container_name: ${MICROSERVICE_NAME}-db
    image: postgres:14.2
    restart: unless-stopped
    environment:
      POSTGRES_USER: "${MICROSERVICE_DB_USER}"
      POSTGRES_PASSWORD: "${MICROSERVICE_DB_PASSWORD}"
      POSTGRES_DB: "${MICROSERVICE_DB_NAME}"
    ports:
      - "5434:5432"
    volumes:
      - ${MICROSERVICE_DATA_PATH}/postgres/data:/var/lib/postgresql/data
    networks:
      - microservice_network

  redis:
    container_name: ${MICROSERVICE_NAME}-redis
    image: redis:6.2.6-alpine
    restart: unless-stopped
    platform: linux/arm64
    ports:
      - "6379:6379"
    command:
      - /usr/local/bin/redis-server
      - /usr/local/etc/redis/redis.conf
    volumes:
      - ${MICROSERVICE_DOCKER_PATH}/${MICROSERVICE_ENV}/redis/default.conf:/usr/local/etc/redis/redis.conf
      - ${MICROSERVICE_DATA_PATH}/redis/data:/data
    networks:
      - microservice_network

networks:
  microservice_network:
    name: www_app
    external: true